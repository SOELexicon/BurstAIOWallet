############################################################
# Do not modify this file.  Instead, create a              #
# nxt.properties file and make your changes there.         #
# They will overwrite the defaults!                        #
############################################################

#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other peers.
# If disabled, peer networking servlet will not be started at all.
nxt.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
nxt.peerServerPort=8123

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all IPv4 interfaces or :: to listen on all IPv4 and IPv6 interfaces
nxt.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to peers,
# and may be different from nxt.peerServerPort (useful if you do port forwarding behind a router).
nxt.myAddress=

# My platform, to be announced to peers.
nxt.myPlatform=AIOWallet

# My hallmark, if available.
nxt.myHallmark=

# A list of well known peer addresses / host names, separated by '; '.
# If not set, a random selection of nxtcrypto.org and nxtbase.com nodes is used.
nxt.wellKnownPeers=167.88.44.19; 176.31.183.98; 144.217.73.150; 5.9.119.180; 185.97.4.19; 132.206.66.246; 174.58.241.214; 195.154.172.74; 94.194.59.13; 185.206.147.15; 104.152.187.198; 217.51.14.38; 162.248.78.98; 104.152.187.197; 178.63.87.215; 82.76.107.166; 46.4.50.88; 5.9.109.194; 77.77.150.120; 176.9.193.149; 144.76.39.69; 104.152.187.196; 46.237.194.160; 104.152.187.195; 107.190.34.147; 217.182.194.162; 160.16.52.180; 37.120.185.33; 108.238.244.144; 104.152.188.15; 88.170.93.206; 5.189.152.4; 5.9.106.250; 5.153.225.55; 73.7.180.95; 46.4.63.17; 5.9.97.229; 89.106.1.126; 5.196.137.241; 149.56.18.91; 162.243.144.202; 94.195.190.255; 199.189.85.178; 23.92.212.10; 77.176.249.102; 70.76.243.58; 74.139.77.215; 217.66.97.34; 151.80.42.137; 87.120.36.244; 38.114.101.84; 88.222.9.72; 78.141.119.20; 38.114.101.88; 92.109.126.47; 176.9.118.214; 158.69.53.36; 176.9.25.254; 5.227.164.181; 94.130.11.118; 128.75.150.158; 137.74.193.184; 144.76.82.118; 77.249.209.55; 183.106.157.197; 217.66.97.41; 78.46.37.137; 103.251.107.78; 71.198.137.230; 109.75.215.248; 109.190.100.208; 82.135.154.9; 5.189.165.186; 5.9.124.68; 82.166.125.233; 66.96.234.230; 1.179.201.220; 145.239.75.142; 91.121.159.44; 185.78.84.214; 183.89.100.15; 37.187.17.73; 70.95.197.163; 54.169.109.69; 85.10.211.130; 195.154.163.156; 192.161.209.104; 152.92.172.36; 112.167.81.44; 158.129.212.236; 86.19.102.12; 195.230.182.182; 211.104.175.60; 87.98.145.132; 71.166.55.129; 128.171.53.34; 77.177.188.69; 82.149.3.111; 130.236.232.24; 164.106.37.6; 162.236.93.205; 192.254.70.188;158.69.150.192; 46.4.126.236; 210.115.227.122; 80.241.221.231; 80.122.157.25; 51.140.57.139; 128.171.156.20; 94.130.11.101; 125.141.38.35; 46.101.25.142; 185.107.80.30; 92.206.64.168; 88.198.141.238; 222.236.72.93; 204.45.61.2; 5.9.118.100; 222.121.208.193; 5.9.107.46; 18.102.222.243; 79.143.190.65; 213.113.246.35; 192.237.253.169; 151.80.16.34;

# These peers will always be sent rebroadcast transactions. They are also automatically added to wellKnownPeers, so no need for duplicates.
burst.rebroadcastPeers=burst.ninja; pool.burstcoin.biz

# Connect to this many well known peers before using the peer database to get connected faster.
# Set to 0 or comment out to disable.
burst.connectWellKnownFirst=2

# Known bad peers to be blacklisted
nxt.knownBlacklistedPeers=

# Peers used for testnet only.
nxt.testnetPeers=

# Maintain active connections with at least that many peers.
nxt.maxNumberOfConnectedPublicPeers=20

# Peer networking connect timeout for outgoing connections.
nxt.connectTimeout=4000

# Peer networking read timeout for outgoing connections.
nxt.readTimeout=8000

# Peer networking server idle timeout, milliseconds.
nxt.peerServerIdleTimeout=30000

# Use the peer hallmark to only connect with peers above the defined push/pull hallmark thresholds.
nxt.enableHallmarkProtection=false

# Hallmark threshold to use when sending data to peers.
nxt.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
nxt.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
nxt.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
nxt.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
nxt.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
nxt.enablePeerServerGZIPFilter=true

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6874 (peer networking), 6875 (UI) and 6876 (API) will be used.
nxt.isTestnet=false

# Save known peers in the database
nxt.savePeers=true

# Set to false to disable use of the peers database. This will not delete saved peers.
nxt.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers. Only useful
# when debugging and want to limit the peers to those in peersDb or wellKnownPeers.
nxt.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for incoming peer
# connections. This is equivalent to setting nxt.shareMyAddress=false, nxt.wellKnownPeers=,
# nxt.testnetPeers= and nxt.usePeersDb=false, and if set to true overrides those properties.
nxt.isOffline=false

# Enable re-broadcasting of new transactions until they are received back from at least one
# peer, or found in the blockchain. This feature can optionally be disabled, to avoid the
# risk of revealing that this node is the submitter of such re-broadcasted new transactions.
nxt.enableTransactionRebroadcasting=true

# Transactions that aren't confirmed for this many blocks start getting rebroadcast.
burst.rebroadcastAfter=32

# Transactions being rebroadcast get rebroadcast every this many blocks until they are confirmed.
burst.rebroadcastEvery=4

#### API SERVER ####

# Accept http/json API requests.
nxt.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled.
nxt.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for http/json API requests.
nxt.apiServerPort=8125

# Host interface on which to listen for http/json API request, default localhost only.
# Set to 0.0.0.0 to allow the API server to accept requests from all network interfaces.
nxt.apiServerHost=127.0.0.1

# Idle timeout for http/json API request connections, milliseconds.
nxt.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin tools utilizing
# the http/json API.
nxt.apiResourceBase=html/ui

# Java API documentation directory, optional.
nxt.javadocResourceBase=html/doc

# Enable Cross Origin Filter for the API server.
nxt.apiServerCORS=false

# Enable SSL for the API server (also need to set nxt.keyStorePath and nxt.keyStorePassword).
nxt.apiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.apiServerEnforcePOST=true

# Compress Http responses for the API server.
nxt.enableAPIServerGZIPFilter=false


#### OLD NRS USER INTERFACE ####

# Enable the deprecated NRS user interface.
nxt.enableUIServer=false

# Hosts from which to allow NRS user interface requests, if enabled.
nxt.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for NRS user interface server.
nxt.uiServerPort=7875

# Host interface for NRS user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
nxt.uiServerHost=127.0.0.1

# Idle timeout for NRS user interface server, milliseconds.
nxt.uiServerIdleTimeout=30000

# Directory with html and javascript files for the NRS client user interface.
nxt.uiResourceBase=html/nrs

# Enable Cross Origin Filter for NRS user interface server.
nxt.uiServerCORS=false

# Enable SSL for the NRS user interface (also need to set nxt.keyStorePath and nxt.keyStorePassword).
nxt.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#nxt.log=nxt.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#nxt.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
nxt.enableLogTraceback=false

# Enable logging of exception stack traces.
nxt.enableStackTraces=true

# Enable logging of Jetty messages.
#nxt.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
nxt.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging purposes.
nxt.debugTraceAccounts=

# File name for logging tracked account balances.
nxt.debugTraceLog=nxt-trace.csv

# Separator character for trace log.
nxt.debugTraceSeparator=\t

# Quote character for trace log.
nxt.debugTraceQuote="

# Log changes to unconfirmed balances.
nxt.debugLogUnconfirmed=false


#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The nxt_db folder is expected to be in the current working directory, will be created if missing.
nxt.dbUrl=jdbc:h2:./burst_db/burst;DB_CLOSE_ON_EXIT=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true
nxt.testDbUrl=jdbc:h2:./burst_test_db/burst;DB_CLOSE_ON_EXIT=FALSE

# Database connection timeout in seconds.
nxt.dbLoginTimeout=70

# Database default lock timeout in seconds.
nxt.dbDefaultLockTimeout=60

# Maximum simultaneous database connections.
nxt.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, defaults to 50 % of the memory available to the JVM.
nxt.dbCacheKB=0



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking server only.
nxt.peerServerDoSFilter.maxRequestsPerSec=30
nxt.peerServerDoSFilter.delayMs=1000
nxt.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
nxt.keyStorePath=keystore
nxt.keyStorePassword=password



#### Developers only ####

# Force re-validation of blocks and transaction at start.
nxt.forceValidate=false

# Force re-build of derived objects tables at start.
nxt.forceScan=false

# Print a list of peers having this version on exit.
nxt.dumpPeersVersion=

# Enable trimming of derived objects tables.
nxt.trimDerivedTables=true

# If trimming enabled, maintain enough previous height records to allow rollback of at least
# that many blocks. Must be at least 1440 to allow normal fork resolution. After increasing
# this value, a full re-scan needs to be done in order for previously trimmed records to be
# re-created and preserved.
nxt.maxRollback=1440

# Enable API requests used for blockchain and database manipulation.
nxt.enableDebugAPI=false

# Debug option for Testnet: Winning with every Deadline
burst.mockMining = false

# GPU Blocksync Acceleration / experimental !
burst.oclAuto=true
burst.oclVerify=false

# If 'burst.oclAuto=false' gpu must be specified
burst.oclPlatform=0
burst.oclDevice=0
burst.oclMemPercent=50
burst.oclHashesPerEnqueue=1000
